/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dlp;
import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.util.Date;
import java.util.Random;
import java.io.File;
import java.io.FileInputStream;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
public class Admin_Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form user_dashboard
     */
    
   public emp tempemp;
   public String filesendpaneldeleteid;
   public String receivefilepanelrequestfileid;
   public String requestkeypanelfileid;
   public String receivepaneldownfileid;
   public String Adminpanelauthenroweid;
   public String leakerpanelselectroweid;
   public String New_user_approv_eid;
    public Admin_Dashboard(emp Emp) {
        tempemp=Emp;
        initComponents();
        this.setResizable(false);
        status.setText(tempemp.status);
        eidtext.setText(tempemp.eid);
        profileeditpanel.setVisible(false);
        sendfilepannel.setVisible(false);
        keyreqpannel.setVisible(false);
        filesentpannel.setVisible(false);
        filereceivedpannel.setVisible(false);
        filesenddeletefilebtn.setVisible(false); 
        Receivefileinfopanel.setVisible(false);
        defoultpanel.setVisible(true);
        Adminauthenticate.setVisible(false);
        Leakcheck.setVisible(false);
        New_User_request.setVisible(false);
        
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            String sql = "SELECT eid FROM EMP where eid!=? and status!=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            preparedStatement.setString(1, Emp.eid);
            preparedStatement.setString(2, "inactive");
            ResultSet resultSet = preparedStatement.executeQuery();
            
            while (resultSet.next()) {
                sendfiledropdown.addItem(resultSet.getString("eid"));
            }
            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        profileeditlabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        eidtext = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        jPanel3 = new RoundedPanel(25, new Color(153,0,51));
        jPanel3.setOpaque(false);
        sendfilebox = new RoundedPanel(25, new Color(255,192,192));
        sendfile = new javax.swing.JLabel();
        jPanel8 = new RoundedPanel(25, new Color(255,192,192));
        requestkey = new javax.swing.JLabel();
        jPanel9 = new RoundedPanel(25, new Color(255,192,192));
        filesent = new javax.swing.JLabel();
        jPanel10 = new RoundedPanel(25, new Color(255,192,192));
        filereceived = new javax.swing.JLabel();
        jPanel11 = new RoundedPanel(25, new Color(255,192,192));
        Adminauth = new javax.swing.JLabel();
        jPanel12 = new RoundedPanel(25, new Color(255,192,192));
        leakerlabelpan = new javax.swing.JLabel();
        jPanel13 = new RoundedPanel(25, new Color(255,192,192));
        New_user_requestcal = new javax.swing.JLabel();
        rightpanel = new javax.swing.JPanel();
        filesentpannel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        filesendpaneltable = new javax.swing.JTable();
        filesenddeletefilebtn = new javax.swing.JButton();
        defoultpanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sendfilepannel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        choseeidlabel = new javax.swing.JLabel();
        sendfiledropdown = new javax.swing.JComboBox<>();
        SendfileNamelabel = new javax.swing.JLabel();
        sendfilenametext = new javax.swing.JLabel();
        Sendfilesubjextlabel = new javax.swing.JLabel();
        sendfilesubjecttext = new javax.swing.JTextField();
        sendfilechoosebutton = new javax.swing.JButton();
        sendfilefiletext = new javax.swing.JTextField();
        sendfilesendbutton = new javax.swing.JButton();
        filereceivedpannel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Receivefilepaneltable = new javax.swing.JTable();
        Receivefileinfopanel = new javax.swing.JPanel();
        receivefileinfopanelkeytext = new javax.swing.JLabel();
        receivefileinfopanelrequestbtn = new javax.swing.JButton();
        receivefileinfopanelkeylabel = new javax.swing.JLabel();
        receivefileinfopanellabelforkeyenter = new javax.swing.JLabel();
        receivefileinfopaneldownbtn = new javax.swing.JButton();
        receivefileinfopaneltextfield = new javax.swing.JTextField();
        Adminauthenticate = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Adminauthtable = new javax.swing.JTable();
        Adminapprovalpanel = new javax.swing.JPanel();
        AdminApprovbtn = new javax.swing.JButton();
        Adminrejectbtn = new javax.swing.JButton();
        authentpanelblockbtn = new javax.swing.JButton();
        profileeditpanel = new javax.swing.JPanel();
        Profileidpaneliuserinfolabel = new javax.swing.JLabel();
        priflepanelnamelabel = new javax.swing.JLabel();
        profilepanelnametext = new javax.swing.JLabel();
        profilepanelemaillabel = new javax.swing.JLabel();
        profilepanelemailtext = new javax.swing.JLabel();
        profilepanelmobilelabel = new javax.swing.JLabel();
        profilepanelmobiletext = new javax.swing.JLabel();
        profilepanelshoweditpanelbtn = new javax.swing.JButton();
        profilepaneleditpanel = new javax.swing.JPanel();
        profilepanelnewemaillabel = new javax.swing.JLabel();
        profilepanelnewemailtext = new javax.swing.JTextField();
        profilepanelnewmobilelabel = new javax.swing.JLabel();
        profilepanelnewmobiletext = new javax.swing.JTextField();
        profilepanelnewpasswordlabel = new javax.swing.JLabel();
        profilepanelnewpasswordtext = new javax.swing.JTextField();
        profilepanelmakechangebtn = new javax.swing.JButton();
        keyreqpannel = new javax.swing.JPanel();
        Requestpanelbtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Requestpaneltable = new javax.swing.JTable();
        Leakcheck = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        Leakerpaneltable = new javax.swing.JTable();
        leakerpanelbtnpanel = new javax.swing.JPanel();
        leakerbtnpanelblockbtn = new javax.swing.JButton();
        leakerpanelunblockbtn = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        leakerpaneltryleaktable = new javax.swing.JTable();
        leakerpanellabel = new javax.swing.JLabel();
        New_User_request = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        New_Requestpaneltable = new javax.swing.JTable();
        Newrequestappropanel = new javax.swing.JPanel();
        New_useractivatebtn = new javax.swing.JButton();
        newuserrejectbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 25, 1100, 683));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 192, 192));

        profileeditlabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dlp/icons/user-image-with-black-background.png"))); // NOI18N
        profileeditlabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileeditlabelMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("EID:");

        eidtext.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        eidtext.setText("jLabel3");

        status.setBackground(new java.awt.Color(0, 102, 0));
        status.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        status.setForeground(new java.awt.Color(255, 255, 255));
        status.setText("jLabel3");
        status.setOpaque(true);

        logout.setBackground(new java.awt.Color(255, 191, 191));
        logout.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        logout.setForeground(new java.awt.Color(153, 0, 51));
        logout.setText("Log Out");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eidtext, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout)
                .addGap(34, 34, 34)
                .addComponent(profileeditlabel)
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(eidtext))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(status)
                .addGap(25, 25, 25))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(profileeditlabel)
                    .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(153, 0, 51));
        jPanel3.setPreferredSize(new java.awt.Dimension(248, 371));
        jPanel3.setRequestFocusEnabled(false);

        sendfilebox.setBackground(new java.awt.Color(153,0,51));

        sendfile.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        sendfile.setText("        Send File");
        sendfile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendfileMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout sendfileboxLayout = new javax.swing.GroupLayout(sendfilebox);
        sendfilebox.setLayout(sendfileboxLayout);
        sendfileboxLayout.setHorizontalGroup(
            sendfileboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sendfileboxLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(sendfile, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sendfileboxLayout.setVerticalGroup(
            sendfileboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sendfileboxLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(sendfile, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel8.setBackground(new java.awt.Color(153,0,51));

        requestkey.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        requestkey.setText("   Request Key");
        requestkey.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requestkeyMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(requestkey, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(requestkey, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        jPanel9.setBackground(new java.awt.Color(153,0,51));

        filesent.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        filesent.setText("  File Sent By Me");
        filesent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filesentMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(filesent, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filesent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        jPanel10.setBackground(new java.awt.Color(153,0,51));

        filereceived.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        filereceived.setText("     File Received");
        filereceived.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filereceivedMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(filereceived, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filereceived, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        jPanel11.setBackground(new java.awt.Color(153,0,51));

        Adminauth.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Adminauth.setText("    Authentication");
        Adminauth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AdminauthMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(Adminauth, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(Adminauth, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(153,0,51));

        leakerlabelpan.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        leakerlabelpan.setText("         Leaker");
        leakerlabelpan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leakerlabelpanMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(leakerlabelpan, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(leakerlabelpan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jPanel13.setBackground(new java.awt.Color(153,0,51));

        New_user_requestcal.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        New_user_requestcal.setText("New User Request");
        New_user_requestcal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                New_user_requestcalMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(New_user_requestcal, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(New_user_requestcal)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sendfilebox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(sendfilebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 39, Short.MAX_VALUE)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        rightpanel.setBackground(new java.awt.Color(255, 255, 255));
        rightpanel.setPreferredSize(new java.awt.Dimension(810, 515));

        filesentpannel.setBackground(new java.awt.Color(255, 191, 191));

        filesendpaneltable.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        filesendpaneltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SEND TO", "SUBJECT", "DATE", "FILEID", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        filesendpaneltable.setMaximumSize(new java.awt.Dimension(0, 0));
        filesendpaneltable.setRowHeight(30);
        filesendpaneltable.setRowMargin(5);
        filesendpaneltable.setSelectionBackground(new java.awt.Color(153, 0, 51));
        filesendpaneltable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        filesendpaneltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filesendpaneltableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(filesendpaneltable);

        filesenddeletefilebtn.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        filesenddeletefilebtn.setForeground(new java.awt.Color(152, 0, 51));
        filesenddeletefilebtn.setText("Delete");
        filesenddeletefilebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filesenddeletefilebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout filesentpannelLayout = new javax.swing.GroupLayout(filesentpannel);
        filesentpannel.setLayout(filesentpannelLayout);
        filesentpannelLayout.setHorizontalGroup(
            filesentpannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filesentpannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(filesentpannelLayout.createSequentialGroup()
                .addComponent(filesenddeletefilebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        filesentpannelLayout.setVerticalGroup(
            filesentpannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filesentpannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filesenddeletefilebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        defoultpanel.setBackground(new java.awt.Color(255, 191, 191));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dlp/icons/data-leakage-detection-1024x732.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        jLabel3.setText("DATA LEAKAGE DETECTION");

        jLabel4.setFont(new java.awt.Font("Academy Engraved LET", 3, 15)); // NOI18N
        jLabel4.setText("~ by Vansh Saini");

        javax.swing.GroupLayout defoultpanelLayout = new javax.swing.GroupLayout(defoultpanel);
        defoultpanel.setLayout(defoultpanelLayout);
        defoultpanelLayout.setHorizontalGroup(
            defoultpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(defoultpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(defoultpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(defoultpanelLayout.createSequentialGroup()
                        .addGroup(defoultpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        defoultpanelLayout.setVerticalGroup(
            defoultpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(defoultpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        sendfilepannel.setBackground(new java.awt.Color(255, 191, 191));

        jPanel4.setBackground(new java.awt.Color(153, 0, 51));

        choseeidlabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        choseeidlabel.setForeground(new java.awt.Color(255, 255, 255));
        choseeidlabel.setText("CHOOSE EID TO SEND THE FILE");

        sendfiledropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendfiledropdownActionPerformed(evt);
            }
        });

        SendfileNamelabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        SendfileNamelabel.setForeground(new java.awt.Color(255, 255, 255));
        SendfileNamelabel.setText("NAME:");

        sendfilenametext.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        sendfilenametext.setForeground(new java.awt.Color(255, 255, 255));
        sendfilenametext.setText("USERNAME");

        Sendfilesubjextlabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        Sendfilesubjextlabel.setForeground(new java.awt.Color(255, 255, 255));
        Sendfilesubjextlabel.setText("SUBJECT:");

        sendfilesubjecttext.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        sendfilechoosebutton.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        sendfilechoosebutton.setText("CHOOSE FILE");
        sendfilechoosebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendfilechoosebuttonActionPerformed(evt);
            }
        });

        sendfilefiletext.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N

        sendfilesendbutton.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        sendfilesendbutton.setText("SEND");
        sendfilesendbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendfilesendbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Sendfilesubjextlabel)
                            .addComponent(SendfileNamelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(choseeidlabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(sendfiledropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(269, 269, 269))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addComponent(sendfilesubjecttext, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addComponent(sendfilenametext, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sendfilechoosebutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sendfilefiletext, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sendfilesendbutton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(choseeidlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendfiledropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SendfileNamelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendfilenametext))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Sendfilesubjextlabel)
                    .addComponent(sendfilesubjecttext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendfilefiletext, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendfilechoosebutton))
                .addGap(22, 22, 22)
                .addComponent(sendfilesendbutton)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout sendfilepannelLayout = new javax.swing.GroupLayout(sendfilepannel);
        sendfilepannel.setLayout(sendfilepannelLayout);
        sendfilepannelLayout.setHorizontalGroup(
            sendfilepannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sendfilepannelLayout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        sendfilepannelLayout.setVerticalGroup(
            sendfilepannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sendfilepannelLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(117, Short.MAX_VALUE))
        );

        filereceivedpannel.setBackground(new java.awt.Color(255, 191, 191));
        filereceivedpannel.setPreferredSize(new java.awt.Dimension(854, 560));

        Receivefilepaneltable.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        Receivefilepaneltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SEND BY", "SUBJECT", "DATE", "FILEID", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Receivefilepaneltable.setRowHeight(30);
        Receivefilepaneltable.setRowMargin(5);
        Receivefilepaneltable.setSelectionBackground(new java.awt.Color(153, 0, 51));
        Receivefilepaneltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReceivefilepaneltableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Receivefilepaneltable);

        Receivefileinfopanel.setBackground(new java.awt.Color(153, 0, 51));
        Receivefileinfopanel.setForeground(new java.awt.Color(255, 255, 255));

        receivefileinfopanelkeytext.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        receivefileinfopanelkeytext.setForeground(new java.awt.Color(255, 255, 255));
        receivefileinfopanelkeytext.setText("NOT AVAILABLE");

        receivefileinfopanelrequestbtn.setBackground(new java.awt.Color(204, 204, 204));
        receivefileinfopanelrequestbtn.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        receivefileinfopanelrequestbtn.setForeground(new java.awt.Color(153, 0, 51));
        receivefileinfopanelrequestbtn.setText("Request Key");
        receivefileinfopanelrequestbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivefileinfopanelrequestbtnActionPerformed(evt);
            }
        });

        receivefileinfopanelkeylabel.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        receivefileinfopanelkeylabel.setForeground(new java.awt.Color(255, 255, 255));
        receivefileinfopanelkeylabel.setText("Key To Access The file:");

        receivefileinfopanellabelforkeyenter.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        receivefileinfopanellabelforkeyenter.setForeground(new java.awt.Color(255, 255, 255));
        receivefileinfopanellabelforkeyenter.setText("Enter Key:");

        receivefileinfopaneldownbtn.setBackground(new java.awt.Color(204, 204, 204));
        receivefileinfopaneldownbtn.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        receivefileinfopaneldownbtn.setForeground(new java.awt.Color(153, 0, 51));
        receivefileinfopaneldownbtn.setText("Download");
        receivefileinfopaneldownbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivefileinfopaneldownbtnActionPerformed(evt);
            }
        });

        receivefileinfopaneltextfield.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        receivefileinfopaneltextfield.setForeground(new java.awt.Color(153, 0, 51));

        javax.swing.GroupLayout ReceivefileinfopanelLayout = new javax.swing.GroupLayout(Receivefileinfopanel);
        Receivefileinfopanel.setLayout(ReceivefileinfopanelLayout);
        ReceivefileinfopanelLayout.setHorizontalGroup(
            ReceivefileinfopanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReceivefileinfopanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(receivefileinfopanelkeylabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(receivefileinfopanelkeytext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(receivefileinfopanelrequestbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(receivefileinfopanellabelforkeyenter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(receivefileinfopaneltextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(receivefileinfopaneldownbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        ReceivefileinfopanelLayout.setVerticalGroup(
            ReceivefileinfopanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReceivefileinfopanelLayout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(ReceivefileinfopanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receivefileinfopanelrequestbtn)
                    .addComponent(receivefileinfopanelkeytext)
                    .addComponent(receivefileinfopanelkeylabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receivefileinfopanellabelforkeyenter)
                    .addComponent(receivefileinfopaneltextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(receivefileinfopaneldownbtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout filereceivedpannelLayout = new javax.swing.GroupLayout(filereceivedpannel);
        filereceivedpannel.setLayout(filereceivedpannelLayout);
        filereceivedpannelLayout.setHorizontalGroup(
            filereceivedpannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filereceivedpannelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filereceivedpannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(Receivefileinfopanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        filereceivedpannelLayout.setVerticalGroup(
            filereceivedpannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filereceivedpannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Receivefileinfopanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Adminauthenticate.setBackground(new java.awt.Color(255, 191, 191));

        Adminauthtable.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        Adminauthtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "EID", "NAME", "MOBILE", "EMAIL", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Adminauthtable.setRowHeight(30);
        Adminauthtable.setRowMargin(5);
        Adminauthtable.setSelectionBackground(new java.awt.Color(153, 0, 51));
        Adminauthtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AdminauthtableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(Adminauthtable);

        Adminapprovalpanel.setBackground(new java.awt.Color(153, 0, 51));

        AdminApprovbtn.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        AdminApprovbtn.setText("ACTIVATE");
        AdminApprovbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminApprovbtnActionPerformed(evt);
            }
        });

        Adminrejectbtn.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        Adminrejectbtn.setText("REMOVE");
        Adminrejectbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminrejectbtnActionPerformed(evt);
            }
        });

        authentpanelblockbtn.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        authentpanelblockbtn.setText("BLOCK");
        authentpanelblockbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authentpanelblockbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AdminapprovalpanelLayout = new javax.swing.GroupLayout(Adminapprovalpanel);
        Adminapprovalpanel.setLayout(AdminapprovalpanelLayout);
        AdminapprovalpanelLayout.setHorizontalGroup(
            AdminapprovalpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminapprovalpanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(AdminApprovbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(authentpanelblockbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136)
                .addComponent(Adminrejectbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        AdminapprovalpanelLayout.setVerticalGroup(
            AdminapprovalpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminapprovalpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AdminapprovalpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(authentpanelblockbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AdminapprovalpanelLayout.createSequentialGroup()
                        .addComponent(AdminApprovbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(Adminrejectbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout AdminauthenticateLayout = new javax.swing.GroupLayout(Adminauthenticate);
        Adminauthenticate.setLayout(AdminauthenticateLayout);
        AdminauthenticateLayout.setHorizontalGroup(
            AdminauthenticateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminauthenticateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AdminauthenticateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
                    .addComponent(Adminapprovalpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        AdminauthenticateLayout.setVerticalGroup(
            AdminauthenticateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminauthenticateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(Adminapprovalpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        profileeditpanel.setBackground(new java.awt.Color(255, 191, 191));

        Profileidpaneliuserinfolabel.setFont(new java.awt.Font("Lucida Grande", 1, 30)); // NOI18N
        Profileidpaneliuserinfolabel.setText("                   USER INFORMATION");

        priflepanelnamelabel.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        priflepanelnamelabel.setText("NAME:");

        profilepanelnametext.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        profilepanelnametext.setText("USER_NAME");

        profilepanelemaillabel.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        profilepanelemaillabel.setText("EMAIL:");

        profilepanelemailtext.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        profilepanelemailtext.setText("USER_EMAIL");

        profilepanelmobilelabel.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        profilepanelmobilelabel.setText("MOBILE:");

        profilepanelmobiletext.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        profilepanelmobiletext.setText("USER_MOBILE");

        profilepanelshoweditpanelbtn.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        profilepanelshoweditpanelbtn.setText("EDIT PROFILE");
        profilepanelshoweditpanelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profilepanelshoweditpanelbtnActionPerformed(evt);
            }
        });

        profilepaneleditpanel.setBackground(new java.awt.Color(153, 0, 51));

        profilepanelnewemaillabel.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        profilepanelnewemaillabel.setForeground(new java.awt.Color(255, 255, 255));
        profilepanelnewemaillabel.setText("Enter New Email:");

        profilepanelnewemailtext.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N

        profilepanelnewmobilelabel.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        profilepanelnewmobilelabel.setForeground(new java.awt.Color(255, 255, 255));
        profilepanelnewmobilelabel.setText("Enter New Mobile:");

        profilepanelnewmobiletext.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N

        profilepanelnewpasswordlabel.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        profilepanelnewpasswordlabel.setForeground(new java.awt.Color(255, 255, 255));
        profilepanelnewpasswordlabel.setText("Enter New Password:");

        profilepanelnewpasswordtext.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N

        profilepanelmakechangebtn.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        profilepanelmakechangebtn.setText("MAKE CHANGES");
        profilepanelmakechangebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profilepanelmakechangebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout profilepaneleditpanelLayout = new javax.swing.GroupLayout(profilepaneleditpanel);
        profilepaneleditpanel.setLayout(profilepaneleditpanelLayout);
        profilepaneleditpanelLayout.setHorizontalGroup(
            profilepaneleditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilepaneleditpanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(profilepaneleditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(profilepaneleditpanelLayout.createSequentialGroup()
                        .addGroup(profilepaneleditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(profilepanelnewemaillabel)
                            .addComponent(profilepanelnewmobilelabel))
                        .addGap(33, 33, 33)
                        .addGroup(profilepaneleditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(profilepanelnewemailtext, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(profilepanelnewmobiletext, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(profilepaneleditpanelLayout.createSequentialGroup()
                        .addComponent(profilepanelnewpasswordlabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(profilepaneleditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(profilepanelmakechangebtn)
                            .addComponent(profilepanelnewpasswordtext, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        profilepaneleditpanelLayout.setVerticalGroup(
            profilepaneleditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilepaneleditpanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(profilepaneleditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(profilepanelnewemailtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profilepanelnewemaillabel))
                .addGap(18, 18, 18)
                .addGroup(profilepaneleditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profilepanelnewmobilelabel)
                    .addComponent(profilepanelnewmobiletext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profilepaneleditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profilepanelnewpasswordlabel)
                    .addComponent(profilepanelnewpasswordtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(profilepanelmakechangebtn)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout profileeditpanelLayout = new javax.swing.GroupLayout(profileeditpanel);
        profileeditpanel.setLayout(profileeditpanelLayout);
        profileeditpanelLayout.setHorizontalGroup(
            profileeditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileeditpanelLayout.createSequentialGroup()
                .addGroup(profileeditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(profileeditpanelLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(profileeditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(profileeditpanelLayout.createSequentialGroup()
                                .addComponent(priflepanelnamelabel)
                                .addGap(18, 18, 18)
                                .addComponent(profilepanelnametext, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Profileidpaneliuserinfolabel, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(profileeditpanelLayout.createSequentialGroup()
                                .addGroup(profileeditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(profilepanelemaillabel)
                                    .addComponent(profilepanelmobilelabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(profileeditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(profilepanelmobiletext)
                                    .addComponent(profilepanelemailtext, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(profileeditpanelLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(profilepanelshoweditpanelbtn))
                    .addGroup(profileeditpanelLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(profilepaneleditpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        profileeditpanelLayout.setVerticalGroup(
            profileeditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileeditpanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(Profileidpaneliuserinfolabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(profileeditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priflepanelnamelabel)
                    .addComponent(profilepanelnametext))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profileeditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profilepanelemaillabel)
                    .addComponent(profilepanelemailtext))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profileeditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(profilepanelmobilelabel)
                    .addComponent(profilepanelmobiletext))
                .addGap(18, 18, 18)
                .addComponent(profilepanelshoweditpanelbtn)
                .addGap(26, 26, 26)
                .addComponent(profilepaneleditpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        keyreqpannel.setBackground(new java.awt.Color(255, 191, 191));

        Requestpanelbtn.setBackground(new java.awt.Color(255, 191, 191));
        Requestpanelbtn.setText("SEND KEY");
        Requestpanelbtn.setOpaque(true);
        Requestpanelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RequestpanelbtnActionPerformed(evt);
            }
        });

        Requestpaneltable.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        Requestpaneltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "REQUEST SEND BY", "SUBJECT", "FILEID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Requestpaneltable.setRowHeight(30);
        Requestpaneltable.setRowMargin(5);
        Requestpaneltable.setSelectionBackground(new java.awt.Color(153, 0, 51));
        Requestpaneltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RequestpaneltableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(Requestpaneltable);

        javax.swing.GroupLayout keyreqpannelLayout = new javax.swing.GroupLayout(keyreqpannel);
        keyreqpannel.setLayout(keyreqpannelLayout);
        keyreqpannelLayout.setHorizontalGroup(
            keyreqpannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(keyreqpannelLayout.createSequentialGroup()
                .addGap(346, 346, 346)
                .addComponent(Requestpanelbtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(keyreqpannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                .addContainerGap())
        );
        keyreqpannelLayout.setVerticalGroup(
            keyreqpannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, keyreqpannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Requestpanelbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Leakcheck.setBackground(new java.awt.Color(255, 191, 191));

        Leakerpaneltable.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        Leakerpaneltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EID", "NAME", "FILEID", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Leakerpaneltable.setRowHeight(30);
        Leakerpaneltable.setRowMargin(5);
        Leakerpaneltable.setSelectionBackground(new java.awt.Color(153, 0, 51));
        Leakerpaneltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LeakerpaneltableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(Leakerpaneltable);

        leakerpanelbtnpanel.setBackground(new java.awt.Color(153, 0, 51));

        leakerbtnpanelblockbtn.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        leakerbtnpanelblockbtn.setText("Block");
        leakerbtnpanelblockbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leakerbtnpanelblockbtnActionPerformed(evt);
            }
        });

        leakerpanelunblockbtn.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        leakerpanelunblockbtn.setText("Unblock User");
        leakerpanelunblockbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leakerpanelunblockbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leakerpanelbtnpanelLayout = new javax.swing.GroupLayout(leakerpanelbtnpanel);
        leakerpanelbtnpanel.setLayout(leakerpanelbtnpanelLayout);
        leakerpanelbtnpanelLayout.setHorizontalGroup(
            leakerpanelbtnpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leakerpanelbtnpanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(leakerpanelbtnpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(leakerpanelunblockbtn)
                    .addComponent(leakerbtnpanelblockbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(102, 102, 102))
        );
        leakerpanelbtnpanelLayout.setVerticalGroup(
            leakerpanelbtnpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leakerpanelbtnpanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(leakerbtnpanelblockbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(leakerpanelunblockbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );

        leakerpaneltryleaktable.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        leakerpaneltryleaktable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EID", "NAME", "FILEID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        leakerpaneltryleaktable.setSelectionBackground(new java.awt.Color(153, 0, 51));
        jScrollPane6.setViewportView(leakerpaneltryleaktable);

        leakerpanellabel.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        leakerpanellabel.setText("INFORMATION WHO TRY TO LEAK THE DATA FILE");

        javax.swing.GroupLayout LeakcheckLayout = new javax.swing.GroupLayout(Leakcheck);
        Leakcheck.setLayout(LeakcheckLayout);
        LeakcheckLayout.setHorizontalGroup(
            LeakcheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeakcheckLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LeakcheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(LeakcheckLayout.createSequentialGroup()
                        .addGroup(LeakcheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(leakerpanellabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(leakerpanelbtnpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        LeakcheckLayout.setVerticalGroup(
            LeakcheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeakcheckLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(LeakcheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LeakcheckLayout.createSequentialGroup()
                        .addComponent(leakerpanellabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(leakerpanelbtnpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        New_User_request.setBackground(new java.awt.Color(255, 191, 191));

        New_Requestpaneltable.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        New_Requestpaneltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "EID", "NAME", "MOBILE", "EMAIL", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        New_Requestpaneltable.setRowHeight(30);
        New_Requestpaneltable.setRowMargin(5);
        New_Requestpaneltable.setSelectionBackground(new java.awt.Color(153, 0, 51));
        New_Requestpaneltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                New_RequestpaneltableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(New_Requestpaneltable);

        Newrequestappropanel.setBackground(new java.awt.Color(153, 0, 51));

        New_useractivatebtn.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        New_useractivatebtn.setText("ACTIVATE");
        New_useractivatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                New_useractivatebtnActionPerformed(evt);
            }
        });

        newuserrejectbtn.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        newuserrejectbtn.setText("REMOVE");
        newuserrejectbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newuserrejectbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NewrequestappropanelLayout = new javax.swing.GroupLayout(Newrequestappropanel);
        Newrequestappropanel.setLayout(NewrequestappropanelLayout);
        NewrequestappropanelLayout.setHorizontalGroup(
            NewrequestappropanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewrequestappropanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(New_useractivatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newuserrejectbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        NewrequestappropanelLayout.setVerticalGroup(
            NewrequestappropanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewrequestappropanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NewrequestappropanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, NewrequestappropanelLayout.createSequentialGroup()
                        .addComponent(New_useractivatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(newuserrejectbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout New_User_requestLayout = new javax.swing.GroupLayout(New_User_request);
        New_User_request.setLayout(New_User_requestLayout);
        New_User_requestLayout.setHorizontalGroup(
            New_User_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(New_User_requestLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(New_User_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
                    .addComponent(Newrequestappropanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        New_User_requestLayout.setVerticalGroup(
            New_User_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(New_User_requestLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(Newrequestappropanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout rightpanelLayout = new javax.swing.GroupLayout(rightpanel);
        rightpanel.setLayout(rightpanelLayout);
        rightpanelLayout.setHorizontalGroup(
            rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightpanelLayout.createSequentialGroup()
                .addComponent(filesentpannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rightpanelLayout.createSequentialGroup()
                    .addComponent(defoultpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rightpanelLayout.createSequentialGroup()
                    .addComponent(sendfilepannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rightpanelLayout.createSequentialGroup()
                    .addComponent(filereceivedpannel, javax.swing.GroupLayout.DEFAULT_SIZE, 804, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rightpanelLayout.createSequentialGroup()
                    .addComponent(Adminauthenticate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rightpanelLayout.createSequentialGroup()
                    .addComponent(profileeditpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rightpanelLayout.createSequentialGroup()
                    .addComponent(keyreqpannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rightpanelLayout.createSequentialGroup()
                    .addComponent(Leakcheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rightpanelLayout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(New_User_request, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        rightpanelLayout.setVerticalGroup(
            rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filesentpannel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(defoultpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(sendfilepannel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(filereceivedpannel, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE))
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Adminauthenticate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(profileeditpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(keyreqpannel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Leakcheck, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(rightpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rightpanelLayout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(New_User_request, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rightpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rightpanel, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        Login LoginFrame = new Login();
        LoginFrame.setLocationRelativeTo(null); 
        LoginFrame.setVisible(true);
        LoginFrame.pack();
        this.dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void sendfileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendfileMouseClicked
              sendfile.setForeground(new java.awt.Color(255,255,255));
              requestkey.setForeground(new java.awt.Color(0,0,0));
              filesent.setForeground(new java.awt.Color(0,0,0));
              filereceived.setForeground(new java.awt.Color(0,0,0));
              Adminauth.setForeground(new java.awt.Color(0,0,0));
              leakerlabelpan.setForeground(new java.awt.Color(0,0,0));
              New_user_requestcal.setForeground(new java.awt.Color(0,0,0));
              Adminauthenticate.setVisible(false);
              Leakcheck.setVisible(false);
              filesenddeletefilebtn.setVisible(false);
              sendfilepannel.setVisible(true);
              keyreqpannel.setVisible(false);
              filesentpannel.setVisible(false);
              filereceivedpannel.setVisible(false);
              Receivefileinfopanel.setVisible(false);
              profileeditpanel.setVisible(false);
              defoultpanel.setVisible(false);
              New_User_request.setVisible(false);
              
    }//GEN-LAST:event_sendfileMouseClicked

    public void Showkeyrequest(emp Emp){
        
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            String sql = "Select receiveby,subject,fileid from sendfile natural join receivefile where sendby=? && status=? && download=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            preparedStatement.setString(1, Emp.eid);
            preparedStatement.setString(2,"Key Request");
            preparedStatement.setString(3,"NOT-DOWNLOADED");
            ResultSet rs = preparedStatement.executeQuery();
            
            
            DefaultTableModel model = (DefaultTableModel)Requestpaneltable.getModel();
            while (model.getRowCount() > 0) {
                    model.removeRow(0);
            }
            
            while(rs.next()){ 
                String[] rowData = new String[3];
                rowData[0]=rs.getString("receiveby");
                rowData[1]=rs.getString("subject");
                rowData[2]=rs.getString("fileid");
                model.addRow(rowData);
            }
            stmt.close();
            conn.close();     
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    private void requestkeyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestkeyMouseClicked
        Requestpaneltable.getTableHeader().setFont(new Font("Lato",Font.PLAIN,20));
        Requestpaneltable.getTableHeader().setBackground(new Color(153,0,51));
        Requestpaneltable.getTableHeader().setForeground(new Color(255,255,255));
        Requestpaneltable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        Requestpaneltable.getColumnModel().getColumn(0).setPreferredWidth(190);
        Requestpaneltable.getColumnModel().getColumn(1).setPreferredWidth(497);
        Requestpaneltable.getColumnModel().getColumn(2).setPreferredWidth(100);
        sendfile.setForeground(new java.awt.Color(0,0,0));
        requestkey.setForeground(new java.awt.Color(255,255,255));
        filesent.setForeground(new java.awt.Color(0,0,0));
        filereceived.setForeground(new java.awt.Color(0,0,0));
        Adminauth.setForeground(new java.awt.Color(0,0,0));
        leakerlabelpan.setForeground(new java.awt.Color(0,0,0));
        New_user_requestcal.setForeground(new java.awt.Color(0,0,0));
        Adminauthenticate.setVisible(false);
        Leakcheck.setVisible(false);
        filesenddeletefilebtn.setVisible(false);
        sendfilepannel.setVisible(false);
        keyreqpannel.setVisible(true);
        filesentpannel.setVisible(false);
        filereceivedpannel.setVisible(false);
        Receivefileinfopanel.setVisible(false);
        defoultpanel.setVisible(false);
        profileeditpanel.setVisible(false);
        New_User_request.setVisible(false);
        Showkeyrequest(tempemp);
            
    }//GEN-LAST:event_requestkeyMouseClicked
// Function that take values from database ans set the table of filesendpanel
    public void shoefilesendbyme(emp Emp){
        
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            String sql = "SELECT receiveby,Subject,date,status,fileid FROM Sendfile natural join receivefile where sendby=? && download=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            preparedStatement.setString(1, Emp.eid);
            preparedStatement.setString(2,"NOT-DOWNLOADED");
            ResultSet rs = preparedStatement.executeQuery();
            
            
            DefaultTableModel model = (DefaultTableModel)filesendpaneltable.getModel();
            while (model.getRowCount() > 0) {
                    model.removeRow(0);
            }
            
            while(rs.next()){ 
                String[] rowData = new String[5];
                rowData[0]=rs.getString("receiveby");
                rowData[1]=rs.getString("subject");
                rowData[2]=rs.getString("date");
                rowData[4]=rs.getString("status");
                rowData[3]=String.valueOf(rs.getInt("fileid"));
                model.addRow(rowData);
            }
            stmt.close();
            conn.close();     
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void filesentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filesentMouseClicked
           filesendpaneltable.getTableHeader().setFont(new Font("Lato",Font.PLAIN,20));
        filesendpaneltable.getTableHeader().setBackground(new Color(153,0,51));
        filesendpaneltable.getTableHeader().setForeground(new Color(255,255,255));
        filesendpaneltable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        filesendpaneltable.getColumnModel().getColumn(0).setPreferredWidth(100);
        filesendpaneltable.getColumnModel().getColumn(1).setPreferredWidth(378);
        filesendpaneltable.getColumnModel().getColumn(2).setPreferredWidth(120);
        filesendpaneltable.getColumnModel().getColumn(3).setPreferredWidth(70);
        filesendpaneltable.getColumnModel().getColumn(4).setPreferredWidth(120);      
        sendfile.setForeground(new java.awt.Color(0,0,0));
              requestkey.setForeground(new java.awt.Color(0,0,0));
              filesent.setForeground(new java.awt.Color(255,255,255));
              filereceived.setForeground(new java.awt.Color(0,0,0));
              Adminauth.setForeground(new java.awt.Color(0,0,0));
              leakerlabelpan.setForeground(new java.awt.Color(0,0,0));
              New_user_requestcal.setForeground(new java.awt.Color(0,0,0));
              Adminauthenticate.setVisible(false);
              Leakcheck.setVisible(false);
              filesenddeletefilebtn.setVisible(false);
              filesentpannel.setVisible(true);
              sendfilepannel.setVisible(false);
              keyreqpannel.setVisible(false);
              filereceivedpannel.setVisible(false);     
              Receivefileinfopanel.setVisible(false);
              defoultpanel.setVisible(false);
              profileeditpanel.setVisible(false);
              New_User_request.setVisible(false);
              shoefilesendbyme(tempemp);
              
              
    }//GEN-LAST:event_filesentMouseClicked

     public void shoefilereceivebyme(emp Emp){
        
        Receivefilepaneltable.getTableHeader().setFont(new Font("Lato",Font.PLAIN,20));
        Receivefilepaneltable.getTableHeader().setBackground(new Color(153,0,51));
        Receivefilepaneltable.getTableHeader().setForeground(new Color(255,255,255));
        Receivefilepaneltable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        Receivefilepaneltable.getColumnModel().getColumn(0).setPreferredWidth(100);
        Receivefilepaneltable.getColumnModel().getColumn(1).setPreferredWidth(378);
        Receivefilepaneltable.getColumnModel().getColumn(2).setPreferredWidth(120);
        Receivefilepaneltable.getColumnModel().getColumn(3).setPreferredWidth(70);
        Receivefilepaneltable.getColumnModel().getColumn(4).setPreferredWidth(120);
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            String sql = "SELECT sendby,subject,date,Rstatus,fileid from sendfile natural join receivefile where receiveby=? && download=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            preparedStatement.setString(1, Emp.eid);
            preparedStatement.setString(2,"NOT-DOWNLOADED");
            ResultSet rs = preparedStatement.executeQuery();            
            
            DefaultTableModel model = (DefaultTableModel)Receivefilepaneltable.getModel();
            while (model.getRowCount() > 0) {
                    model.removeRow(0);
            }
            
            while(rs.next()){ 
                String[] rowData = new String[5];
                rowData[0]=rs.getString("sendby");
                rowData[1]=rs.getString("subject");
                rowData[2]=rs.getString("date");
                rowData[4]=rs.getString("Rstatus");
                rowData[3]=String.valueOf(rs.getInt("fileid"));
                model.addRow(rowData);
           }
          stmt.close();
          conn.close();     
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void filereceivedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filereceivedMouseClicked
              sendfile.setForeground(new java.awt.Color(0,0,0));
              requestkey.setForeground(new java.awt.Color(0,0,0));
              filesent.setForeground(new java.awt.Color(0,0,0));
              filereceived.setForeground(new java.awt.Color(255,255,255));
              Adminauth.setForeground(new java.awt.Color(0,0,0));
              leakerlabelpan.setForeground(new java.awt.Color(0,0,0));
              New_user_requestcal.setForeground(new java.awt.Color(0,0,0));
              Adminauthenticate.setVisible(false);
              Leakcheck.setVisible(false);
              filesenddeletefilebtn.setVisible(false);
              sendfilepannel.setVisible(false);
              keyreqpannel.setVisible(false);
              filesentpannel.setVisible(false);
              filereceivedpannel.setVisible(true); 
              Receivefileinfopanel.setVisible(false);
              defoultpanel.setVisible(false);
              profileeditpanel.setVisible(false);
              New_User_request.setVisible(false);
              shoefilereceivebyme(tempemp);
    }//GEN-LAST:event_filereceivedMouseClicked

    private void sendfiledropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendfiledropdownActionPerformed
               String selectedValue = (String) sendfiledropdown.getSelectedItem();
               final String url = "jdbc:mysql://localhost:3307/dlp";
               final String user = "root";
               final String password = "";
               try {
                     Connection conn = DriverManager.getConnection(url, user, password);
                     Statement stmt = conn.createStatement();
                     String sql = "SELECT name FROM EMP where eid=?";
                     PreparedStatement preparedStatement = conn.prepareStatement(sql);
                     preparedStatement.setString(1,selectedValue);
                     ResultSet resultSet = preparedStatement.executeQuery();
          
            if (resultSet.next()) {
                sendfilenametext.setText(resultSet.getString("name"));
            }
           
            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
               
    }//GEN-LAST:event_sendfiledropdownActionPerformed

    private void sendfilechoosebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendfilechoosebuttonActionPerformed
         JFileChooser fileChooser = new JFileChooser();
                int returnValue = fileChooser.showOpenDialog(null);

                if (returnValue == JFileChooser.APPROVE_OPTION) {
                    java.io.File selectedFile = fileChooser.getSelectedFile();
                    sendfilefiletext.setText(selectedFile.getAbsolutePath());
                } else {
                    sendfilefiletext.setText("NO FILE CHOOSE");
                }
    }//GEN-LAST:event_sendfilechoosebuttonActionPerformed

    public int generateThreeDigitRandomNumber() {
        Random rand = new Random();
        int randomNumber = rand.nextInt(900) + 100;
        return randomNumber;
    }
    
    public int generatefourDigitRandomNumber() {
        Random rand = new Random();
        int randomNumber = rand.nextInt(9000) + 1000;
        return randomNumber;
    }
    
    public  String getFileType(String fileName) {
        if (fileName == null || fileName.isEmpty()) {
            return "";
        }

        int lastDotIndex = fileName.lastIndexOf('.');
        if (lastDotIndex != -1 && lastDotIndex < fileName.length() - 1) {
            return fileName.substring(lastDotIndex + 1);
        } else {
            return ""; // No file extension found
        }
    }
    
    private void sendfilesendbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendfilesendbuttonActionPerformed
        String Subject = sendfilesubjecttext.getText();
        String filepath = sendfilefiletext.getText();
        
        if(Subject.equals("") || filepath.equals("") || filepath.equals("NO FILE CHOOSE")){
              System.out.print("no selectedfile");
              JOptionPane.showMessageDialog(Admin_Dashboard.this, "Please select the fields", "Try Again", JOptionPane.ERROR_MESSAGE);
              return;
        }
        String revcereid = (String) sendfiledropdown.getSelectedItem();
        String sendeif = tempemp.eid;
        java.util.Date utilDate = new java.util.Date();
        java.sql.Date currentDate = new java.sql.Date(utilDate.getTime());
        String setstatus1 = "SEND ONLY";
        int fileid = generateThreeDigitRandomNumber();
        int key = generatefourDigitRandomNumber();
        String down = "NOT-DOWNLOADED";
        String Rstatus = "Receive only";
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        
        File fileToInsert = new File(filepath);
        long maxFileSize =1048576; 
        long fileSize = fileToInsert.length(); 
        try{
          if(fileSize>=maxFileSize){
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "File is too large", "Try Again", JOptionPane.ERROR_MESSAGE);
            sendfilefiletext.setText("");
            sendfilesubjecttext.setText("");
            return;
          }
        }catch(SecurityException e){
             JOptionPane.showMessageDialog(Admin_Dashboard.this, "File Permission denied", "Try Again", JOptionPane.ERROR_MESSAGE);
             return;
        }
        try {
             Connection conn = DriverManager.getConnection(url, user, password);
             Statement stmt = conn.createStatement();
             String filtype = getFileType(filepath);
             FileInputStream inputStream = new FileInputStream(fileToInsert);
             PreparedStatement preparedStatement1 = conn.prepareStatement("INSERT INTO filedata (fileid,filedata,filetype) VALUES (?,?,?)");
             preparedStatement1.setInt(1,fileid);
             preparedStatement1.setBinaryStream(2, inputStream, (int) fileToInsert.length());
             preparedStatement1.setString(3,filtype);
             int addrows1 = preparedStatement1.executeUpdate();
             
               String sql = "INSERT INTO sendfile (sendby, receiveby, Subject, Date, Status, fileid, keyfile) VALUES (?, ?, ?, ?, ?, ?, ?)";
               PreparedStatement preparedStatement = conn.prepareStatement(sql);
               preparedStatement.setString(1,sendeif); 
               preparedStatement.setString(2,revcereid); 
               preparedStatement.setString(3,Subject);
               preparedStatement.setDate(4,currentDate);
               preparedStatement.setString(5,setstatus1);
               preparedStatement.setInt(6,fileid);
               preparedStatement.setInt(7,key);
               int addrows = preparedStatement.executeUpdate();
             
               String sql2 = "INSERT INTO Receivefile (fileid,filekey,counting,download,Rstatus) VALUES (?,?,?,?,?)";
               PreparedStatement preparedStatement2 = conn.prepareStatement(sql2);
               preparedStatement2.setInt(1,fileid);
               preparedStatement2.setInt(2,-1);
               preparedStatement2.setInt(3,2);
               preparedStatement2.setString(4,down);
               preparedStatement2.setString(5,Rstatus);
               int addrows2 = preparedStatement2.executeUpdate();
               
             
             if(addrows>0 && addrows2>0 && addrows1>0){
                 JOptionPane.showMessageDialog(Admin_Dashboard.this, "File Send Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                 sendfilesubjecttext.setText("");
                 sendfilefiletext.setText("");
             }else{
                  JOptionPane.showMessageDialog(Admin_Dashboard.this, "ERROR WHILE SENDING THE FILE", "Try Again", JOptionPane.ERROR_MESSAGE);
             }
           stmt.close();
           conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_sendfilesendbuttonActionPerformed

    private void filesenddeletefilebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filesenddeletefilebtnActionPerformed
        String file_id = filesendpaneldeleteid;
        if(file_id.equals("")){
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Filled are empty", "Try Again", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int fileid = Integer.parseInt(file_id);
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
             
            String sql1 = "DELETE FROM SENDFILE WHERE fileid=?";
            String sql2 = "DELETE FROM RECEIVEFILE WHERE fileid=?";
            String sql3 = "DELETE FROM FILEDATA WHERE fileid=?";
            
               PreparedStatement preparedStatement1 = conn.prepareStatement(sql1);
               PreparedStatement preparedStatement2 = conn.prepareStatement(sql2);
               PreparedStatement preparedStatement3 = conn.prepareStatement(sql3);
               preparedStatement1.setInt(1,fileid);
               preparedStatement2.setInt(1,fileid);
               preparedStatement3.setInt(1,fileid);
 
               int addrows1 = preparedStatement1.executeUpdate();
               int addrows2 = preparedStatement2.executeUpdate();
               int addrows3 = preparedStatement3.executeUpdate();
               
               if(addrows1>0 && addrows2>0 && addrows3>0){
                    JOptionPane.showMessageDialog(Admin_Dashboard.this, "File Transection Delete", "Success", JOptionPane.INFORMATION_MESSAGE);
                    filesendpaneldeleteid="";
                    shoefilesendbyme(tempemp);
                    filesenddeletefilebtn.setVisible(false);
               }else if(addrows1==0 && addrows2==0 && addrows3==0){
                    JOptionPane.showMessageDialog(Admin_Dashboard.this, "Please Enter correct fileid", "Try Again", JOptionPane.ERROR_MESSAGE);
                  filesendpaneldeleteid="";
               }else{
                   JOptionPane.showMessageDialog(Admin_Dashboard.this, "Error while deleting file transection", "Try Again", JOptionPane.ERROR_MESSAGE);
               }
                    
            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        } 
    }//GEN-LAST:event_filesenddeletefilebtnActionPerformed
    
    private void filesendpaneltableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filesendpaneltableMouseClicked
         filesenddeletefilebtn.setVisible(true);
         DefaultTableModel model1 = (DefaultTableModel)filesendpaneltable.getModel();
         filesendpaneldeleteid = model1.getValueAt(filesendpaneltable.getSelectedRow(),3).toString();
    }//GEN-LAST:event_filesendpaneltableMouseClicked

    private void receivefileinfopanelrequestbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivefileinfopanelrequestbtnActionPerformed
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            String sql = "Select status,Rstatus from sendfile natural join receivefile where fileid = ?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            preparedStatement.setString(1,receivefilepanelrequestfileid);
            ResultSet rs = preparedStatement.executeQuery();
            boolean flag=false;
            if(rs.next()){
                if(rs.getString("status").equals("SEND ONLY") && rs.getString("Rstatus").equals("Receive only")){
                    flag=true;
                }
            }
            
            if(flag==true){
               String sql1 = "update sendfile set status='Key Request' where fileid=?";
               String sql2 = "update receivefile set Rstatus='Request Send' where fileid=?";
               
               PreparedStatement preparedStatement1 = conn.prepareStatement(sql1);
               PreparedStatement preparedStatement2 = conn.prepareStatement(sql2);

               preparedStatement1.setString(1,receivefilepanelrequestfileid);
               preparedStatement2.setString(1,receivefilepanelrequestfileid);
               int rowsAffected1= preparedStatement1.executeUpdate();
               int rowsAffected2= preparedStatement2.executeUpdate();
               
               if(rowsAffected1>0 && rowsAffected2>0){
                   JOptionPane.showMessageDialog(Admin_Dashboard.this, "Request Send Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                   shoefilereceivebyme(tempemp);
                   receivefilepanelrequestfileid="";
                   Receivefileinfopanel.setVisible(false);
                   
               }else{
                   JOptionPane.showMessageDialog(Admin_Dashboard.this, "Facing Error while sending request", "Try Again", JOptionPane.ERROR_MESSAGE);
               }
            }
            
            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_receivefileinfopanelrequestbtnActionPerformed

    private void ReceivefilepaneltableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReceivefilepaneltableMouseClicked

        Receivefileinfopanel.setVisible(true);
        receivefileinfopanelrequestbtn.setVisible(false);
        DefaultTableModel model1 = (DefaultTableModel)Receivefilepaneltable.getModel();
        receivefilepanelrequestfileid=model1.getValueAt(Receivefilepaneltable.getSelectedRow(),3).toString();
        receivepaneldownfileid=model1.getValueAt(Receivefilepaneltable.getSelectedRow(),3).toString();
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            String sql = "Select filekey from receivefile where fileid=?";
            String sql1 = "Select Rstatus from receivefile where fileid=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            PreparedStatement preparedStatement1 = conn.prepareStatement(sql1);
            preparedStatement.setString(1,receivefilepanelrequestfileid);
            preparedStatement1.setString(1,receivefilepanelrequestfileid);
            ResultSet rs1 = preparedStatement1.executeQuery();
            if(rs1.next()){
                if(rs1.getString("Rstatus").equals("Receive only")){
                  receivefileinfopanelrequestbtn.setVisible(true);
                }
            }
            ResultSet rs = preparedStatement.executeQuery();
            
            if(rs.next()){
                if(rs.getInt("filekey")==-1){
                    receivefileinfopanelkeytext.setText("Not Available");
                }else{
                    receivefileinfopanelkeytext.setText(String.valueOf(rs.getInt("filekey")));
                }
            }
           stmt.close();
           conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }   
         
    }//GEN-LAST:event_ReceivefilepaneltableMouseClicked

    private void receivefileinfopaneldownbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivefileinfopaneldownbtnActionPerformed
        String Usrenterkey = receivefileinfopaneltextfield.getText();
        String keyfromreceivefile="";
        if(Usrenterkey.equals("")){
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Please Enter The Key", "Try Again", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String tempkey="";
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
           
            String sql = "Select keyfile from sendfile where fileid = ?";
            String sqllek = "Select filekey from receivefile where fileid=?";
            String sql0 = "Select counting from receivefile where fileid = ?";
            PreparedStatement preparedStatement0 = conn.prepareStatement(sql0);
            preparedStatement0.setString(1,receivepaneldownfileid);
            ResultSet rs0 = preparedStatement0.executeQuery();
            if(rs0.next()){
                int k = rs0.getInt("counting");
                if(k==0){
                     JOptionPane.showMessageDialog(Admin_Dashboard.this, "You Can't Download The file As 0 Attemps Left", "Try Again", JOptionPane.ERROR_MESSAGE);
                     return;
                }
            }
            
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            preparedStatement.setString(1,receivepaneldownfileid);
            
            
            PreparedStatement preparedStatementlek = conn.prepareStatement(sqllek);
            preparedStatementlek.setString(1,receivepaneldownfileid);
            
            ResultSet rs = preparedStatement.executeQuery();
            ResultSet rslek = preparedStatementlek.executeQuery();
            
            if(rs.next()){
                tempkey=String.valueOf(rs.getInt("keyfile"));
            }
            
            if(rslek.next()){
                keyfromreceivefile=String.valueOf(rslek.getInt("filekey"));
            }
            
                            
            String SAVE_FOLDER = "/Users/vanshsaini/Documents/DLP_DATA/";
            if(tempkey.equals(Usrenterkey)){
                String sql1 = "SELECT filedata,filetype FROM filedata WHERE fileid = ?";
                PreparedStatement preparedStatement1 = conn.prepareStatement(sql1);
                preparedStatement1.setInt(1,Integer.parseInt(receivepaneldownfileid));
                
                try (ResultSet rs1 = preparedStatement1.executeQuery()) {
                   if (rs1.next()) {
                    InputStream fileData = rs1.getBinaryStream("filedata");
                    File folder = new File(SAVE_FOLDER);
                    String filePath = SAVE_FOLDER + "file_" + receivepaneldownfileid + "."+rs1.getString("filetype");
                    saveFile(fileData, filePath);
                    
                    if(tempkey.equals(keyfromreceivefile)){
                       String sql3 = "DELETE FROM SENDFILE WHERE fileid=?";
                       String sql4 = "DELETE FROM RECEIVEFILE WHERE fileid=?";
                       String sql5 = "DELETE FROM FILEDATA WHERE fileid=?";
            
                       PreparedStatement preparedStatement3 = conn.prepareStatement(sql3);
                       PreparedStatement preparedStatement4 = conn.prepareStatement(sql4);
                       PreparedStatement preparedStatement5 = conn.prepareStatement(sql5);
                       preparedStatement3.setString(1,receivepaneldownfileid);
                       preparedStatement4.setString(1,receivepaneldownfileid);
                       preparedStatement5.setString(1,receivepaneldownfileid);
 
                       int rows1 = preparedStatement3.executeUpdate();
                       int rows2 = preparedStatement4.executeUpdate();
                       int rows3 = preparedStatement5.executeUpdate();
                       if(rows1>0 && rows2>0 && rows3>0){
                         JOptionPane.showMessageDialog(Admin_Dashboard.this, "File Downloaded Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                            shoefilereceivebyme(tempemp);
                           Receivefileinfopanel.setVisible(false);
                         }  
                    }else{
                        String sql9 = "update receivefile set download='Downloaded' where fileid=?";
                        PreparedStatement preparedStatement9 = conn.prepareStatement(sql9);
                        preparedStatement9.setString(1,receivepaneldownfileid);
                        int rows9 = preparedStatement9.executeUpdate();
                        if(rows9>0){
                            JOptionPane.showMessageDialog(Admin_Dashboard.this, "File Downloaded Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                            shoefilereceivebyme(tempemp);
                           Receivefileinfopanel.setVisible(false);
                        }
                    }
                   
                   
                } else {
                    JOptionPane.showMessageDialog(Admin_Dashboard.this, "Error While Downloading The File", "Try Again", JOptionPane.ERROR_MESSAGE);
                  }
               }
            }else{
                String sql6 = "select counting from receivefile where fileid=?";
                String sql7 = "update receivefile set counting=? where fileid=?";
                PreparedStatement preparedStatement6 = conn.prepareStatement(sql6);
                preparedStatement6.setString(1,receivepaneldownfileid);
                ResultSet rs6 = preparedStatement6.executeQuery();
                if(rs6.next())
                {
                    PreparedStatement preparedStatement7 = conn.prepareStatement(sql7);
                    preparedStatement7.setInt(1,rs6.getInt("counting")-1);
                    preparedStatement7.setString(2,receivepaneldownfileid);
                    int reffect = preparedStatement7.executeUpdate();
                    if(reffect>0){
                        JOptionPane.showMessageDialog(Admin_Dashboard.this, "Wrong key Attemps left "+(String.valueOf(rs6.getInt("counting")-1)), "Try Again", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
                
            }
            
            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        } 
        
    }//GEN-LAST:event_receivefileinfopaneldownbtnActionPerformed

    private void RequestpanelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RequestpanelbtnActionPerformed
        if(requestkeypanelfileid.equals("")){
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Please Select the Transection", "Success", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();

            String sql = "Select keyfile from sendfile where fileid=?";
            String sql1 = "update receivefile set filekey=?,Rstatus='Approved' where fileid=?";
            String sql2 = "update sendfile set status='Approved' where fileid = ?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            PreparedStatement preparedStatement1 = conn.prepareStatement(sql1);
            PreparedStatement preparedStatement2 = conn.prepareStatement(sql2);
            preparedStatement.setString(1,requestkeypanelfileid);
            preparedStatement2.setString(1,requestkeypanelfileid);
            ResultSet rs = preparedStatement.executeQuery();

            if(rs.next()){
                preparedStatement1.setInt(1,rs.getInt("keyfile"));
                preparedStatement1.setString(2,requestkeypanelfileid);
                int rowsAffected1= preparedStatement1.executeUpdate();
                int rowsAffected2= preparedStatement2.executeUpdate();
                if(rowsAffected1>0 && rowsAffected2>0){
                    JOptionPane.showMessageDialog(Admin_Dashboard.this, "Key Send Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                    Showkeyrequest(tempemp);
                }else{
                    JOptionPane.showMessageDialog(Admin_Dashboard.this, "Facing Some Error While Sending the Key", "Try Again", JOptionPane.ERROR_MESSAGE);
                }
            }else
            {
                JOptionPane.showMessageDialog(Admin_Dashboard.this, "Error While Connecting To The Database", "Try Again", JOptionPane.ERROR_MESSAGE);
            }

            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_RequestpanelbtnActionPerformed

    
    private void RequestpaneltableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RequestpaneltableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model1 = (DefaultTableModel)Requestpaneltable.getModel();
        requestkeypanelfileid=model1.getValueAt(Requestpaneltable.getSelectedRow(),2).toString();
    }//GEN-LAST:event_RequestpaneltableMouseClicked

    public void loadprofile(){
        profilepaneleditpanel.setVisible(false);
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            
            String sql = "Select name,email,mobile from emp where eid=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            preparedStatement.setString(1,tempemp.eid);
            ResultSet rs = preparedStatement.executeQuery();
            if(rs.next()){
                profilepanelnametext.setText(rs.getString("name"));
                profilepanelemailtext.setText(rs.getString("email"));
                profilepanelmobiletext.setText(rs.getString("mobile"));
            }

            stmt.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void profileeditlabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileeditlabelMouseClicked
        Adminauth.setForeground(new java.awt.Color(0,0,0));
        leakerlabelpan.setForeground(new java.awt.Color(0,0,0));
        sendfile.setForeground(new java.awt.Color(0,0,0));
        requestkey.setForeground(new java.awt.Color(0,0,0));
        filesent.setForeground(new java.awt.Color(0,0,0));
        filereceived.setForeground(new java.awt.Color(0,0,0)); 
        New_user_requestcal.setForeground(new java.awt.Color(0,0,0));
        filesenddeletefilebtn.setVisible(false);
        sendfilepannel.setVisible(false);
        keyreqpannel.setVisible(false);
        filesentpannel.setVisible(false);
        filereceivedpannel.setVisible(false);
        Receivefileinfopanel.setVisible(false);
        profileeditpanel.setVisible(false);
        defoultpanel.setVisible(false);
        Adminauthenticate.setVisible(false);
        Leakcheck.setVisible(false);
        New_User_request.setVisible(false);
        profileeditpanel.setVisible(true);
        loadprofile();
    }//GEN-LAST:event_profileeditlabelMouseClicked

    private void profilepanelmakechangebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profilepanelmakechangebtnActionPerformed
        String nemail=profilepanelnewemailtext.getText();
        String nmobile=profilepanelnewmobiletext.getText();
        String npass=profilepanelnewpasswordtext.getText();
        
        if(nemail.equals("") && nmobile.equals("") && npass.equals("")){
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Please Enter The Field Which You Want To Update", "Try Again", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!npass.equals("")){
             passwordmanager pm=new passwordmanager();
             npass=pm.encryptPassword(npass);
        }else{
           npass=tempemp.password;
        }
        
        if(nmobile.equals("")){
            nmobile=tempemp.mobile;
        }
        if(nemail.equals("")){
            nemail = tempemp.email;
        }       
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            
            String sql = "update emp set mobile=?,email=?,password=? where eid =?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            preparedStatement.setString(1,nmobile);
            preparedStatement.setString(2,nemail);
            preparedStatement.setString(3,npass);
            preparedStatement.setString(4,tempemp.eid);
           
            int row = preparedStatement.executeUpdate();
            if(row>0){
                 
                JOptionPane.showMessageDialog(Admin_Dashboard.this, "Changes Made Suceesfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                profilepanelnewemailtext.setText("");
                profilepanelnewmobiletext.setText("");
                profilepanelnewpasswordtext.setText("");
                loadprofile();
            }
            stmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Error While Connecting To The Database", "Try Again", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_profilepanelmakechangebtnActionPerformed

    private void profilepanelshoweditpanelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profilepanelshoweditpanelbtnActionPerformed
        profilepaneleditpanel.setVisible(true);
    }//GEN-LAST:event_profilepanelshoweditpanelbtnActionPerformed

    public void showAdminrequest(){
        Adminapprovalpanel.setVisible(false);
        Adminauthtable.getTableHeader().setFont(new Font("Lato",Font.PLAIN,20));
        Adminauthtable.getTableHeader().setBackground(new Color(153,0,51));
        Adminauthtable.getTableHeader().setForeground(new Color(255,255,255));
        Adminauthtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        Adminauthtable.getColumnModel().getColumn(0).setPreferredWidth(100);
        Adminauthtable.getColumnModel().getColumn(1).setPreferredWidth(200);
        Adminauthtable.getColumnModel().getColumn(2).setPreferredWidth(130);
        Adminauthtable.getColumnModel().getColumn(3).setPreferredWidth(257);
        Adminauthtable.getColumnModel().getColumn(4).setPreferredWidth(100);
        
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            
            String sql = "Select *from emp where status=? or status=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            preparedStatement.setString(1,"active");
            preparedStatement.setString(2,"Block");
            ResultSet rs = preparedStatement.executeQuery();
            
            DefaultTableModel model = (DefaultTableModel)Adminauthtable.getModel();
            while (model.getRowCount() > 0) {
                    model.removeRow(0);
            }
            
            while(rs.next()){ 
                String[] rowData = new String[5];
                rowData[0]=rs.getString("eid");
                rowData[1]=rs.getString("name");
                rowData[2]=rs.getString("mobile");
                rowData[4]=rs.getString("Status");
                rowData[3]=rs.getString("email");
                model.addRow(rowData);
           }
            stmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Error While Connecting To The Database", "Try Again", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }   
    }
    
    
    private void AdminauthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdminauthMouseClicked
        Adminauth.setForeground(new java.awt.Color(255,255,255));
        leakerlabelpan.setForeground(new java.awt.Color(0,0,0));
        sendfile.setForeground(new java.awt.Color(0,0,0));
        requestkey.setForeground(new java.awt.Color(0,0,0));
        filesent.setForeground(new java.awt.Color(0,0,0));
        filereceived.setForeground(new java.awt.Color(0,0,0)); 
         New_user_requestcal.setForeground(new java.awt.Color(0,0,0));
        filesenddeletefilebtn.setVisible(false);
        sendfilepannel.setVisible(false);
        keyreqpannel.setVisible(false);
        filesentpannel.setVisible(false);
        filereceivedpannel.setVisible(false);
        Receivefileinfopanel.setVisible(false);
        profileeditpanel.setVisible(false);
        defoultpanel.setVisible(false);
        New_User_request.setVisible(false);
        Adminauthenticate.setVisible(true);
        Leakcheck.setVisible(false);
        showAdminrequest();
        
    }//GEN-LAST:event_AdminauthMouseClicked

    public void showleakfiledata(){
        
        leakerpanelbtnpanel.setVisible(false);
        Leakerpaneltable.getTableHeader().setFont(new Font("Lato",Font.PLAIN,20));
        Leakerpaneltable.getTableHeader().setBackground(new Color(153,0,51));
        Leakerpaneltable.getTableHeader().setForeground(new Color(255,255,255));
        leakerpaneltryleaktable.getTableHeader().setFont(new Font("Lato",Font.PLAIN,20));
        leakerpaneltryleaktable.getTableHeader().setBackground(new Color(153,0,51));
        leakerpaneltryleaktable.getTableHeader().setForeground(new Color(255,255,255));
        leakerpaneltryleaktable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        leakerpaneltryleaktable.getColumnModel().getColumn(0).setPreferredWidth(90);
        leakerpaneltryleaktable.getColumnModel().getColumn(1).setPreferredWidth(219);
        leakerpaneltryleaktable.getColumnModel().getColumn(2).setPreferredWidth(90);
        
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            
            String sql = "Select receiveby,fileid from sendfile natural join receivefile where filekey=? and download=?";
            String sql1="Select name from emp where eid=? and Status=?";
            String sql2="Select receiveby,fileid from sendfile natural join receivefile where counting=?";
                    
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            PreparedStatement preparedStatement1 = conn.prepareStatement(sql1);
            PreparedStatement preparedStatement2 = conn.prepareStatement(sql2);
            preparedStatement.setInt(1, -1);
            preparedStatement.setString(2,"Downloaded");
            preparedStatement2.setInt(1, 0);
            
            ResultSet rs = preparedStatement.executeQuery();
            ResultSet rs2 = preparedStatement2.executeQuery();
            
            DefaultTableModel model = (DefaultTableModel)Leakerpaneltable.getModel();
            DefaultTableModel model1 = (DefaultTableModel)leakerpaneltryleaktable.getModel();
            while (model.getRowCount() > 0) {
                    model.removeRow(0);
            }
            while (model1.getRowCount() > 0) {
                    model1.removeRow(0);
            }
            while(rs.next()){ 
                preparedStatement1.setString(1,rs.getString("receiveby"));
                preparedStatement1.setString(2,"active");
                ResultSet rs1 = preparedStatement1.executeQuery();
                String temp="";
                if(rs1.next()){
                    temp=rs1.getString("name");
                }
                if(!temp.equals("")){
                String[] rowData = new String[4];
                rowData[0]=rs.getString("receiveby");
                rowData[1]=temp;
                rowData[2]=rs.getString("fileid");
                rowData[3]="File Leaked";
                model.addRow(rowData);
                }
           }
            while(rs2.next()){ 
                preparedStatement1.setString(1,rs2.getString("receiveby"));
                preparedStatement1.setString(2,"active");
                ResultSet rs1 = preparedStatement1.executeQuery();
                String temp="";
                if(rs1.next()){
                    temp=rs1.getString("name");
                }
                
                if(!temp.equals("")){
                String[] rowData = new String[3];
                rowData[0]=rs2.getString("receiveby");
                rowData[1]=temp;
                rowData[2]=rs2.getString("fileid");    
                model1.addRow(rowData);
                }
           }
            
            stmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Error While Connecting To The Database", "Try Again", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }  
    }
    
    private void leakerlabelpanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leakerlabelpanMouseClicked
         leakerlabelpan.setForeground(new java.awt.Color(255,255,255));
         Adminauth.setForeground(new java.awt.Color(0,0,0));
         sendfile.setForeground(new java.awt.Color(0,0,0));
         requestkey.setForeground(new java.awt.Color(0,0,0));
         filesent.setForeground(new java.awt.Color(0,0,0));
         filereceived.setForeground(new java.awt.Color(0,0,0)); 
         New_user_requestcal.setForeground(new java.awt.Color(0,0,0));
         filesenddeletefilebtn.setVisible(false);
         sendfilepannel.setVisible(false);
         keyreqpannel.setVisible(false);
         filesentpannel.setVisible(false);
         filereceivedpannel.setVisible(false);
         Receivefileinfopanel.setVisible(false);
         profileeditpanel.setVisible(false);
         defoultpanel.setVisible(false);
         Adminauthenticate.setVisible(false);
         New_User_request.setVisible(false);
         Leakcheck.setVisible(true);
         showleakfiledata();
    }//GEN-LAST:event_leakerlabelpanMouseClicked

    private void AdminauthtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdminauthtableMouseClicked
      Adminapprovalpanel.setVisible(true);
      DefaultTableModel model1 = (DefaultTableModel)Adminauthtable.getModel();
      Adminpanelauthenroweid=model1.getValueAt(Adminauthtable.getSelectedRow(),0).toString();
    }//GEN-LAST:event_AdminauthtableMouseClicked

    private void AdminApprovbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminApprovbtnActionPerformed
       
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            String sql1="Update emp set status=? where eid=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql1);
            preparedStatement.setString(1,"active");
             preparedStatement.setString(2,Adminpanelauthenroweid);
            int row = preparedStatement.executeUpdate();
            if(row>0){
                JOptionPane.showMessageDialog(Admin_Dashboard.this, "User Activate Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                Adminpanelauthenroweid="";
                showAdminrequest();
            }
            
            stmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Error While Connecting To The Database", "Try Again", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }   
    }//GEN-LAST:event_AdminApprovbtnActionPerformed

    private void AdminrejectbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminrejectbtnActionPerformed
        // TODO add your handling code here:
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            String sql1="delete from emp where eid=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql1);
            preparedStatement.setString(1,Adminpanelauthenroweid);
            
            int row = preparedStatement.executeUpdate();
            if(row>0){
                JOptionPane.showMessageDialog(Admin_Dashboard.this, "User Reject Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                Adminpanelauthenroweid="";
                showAdminrequest();
            }
            
            stmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Error While Connecting To The Database", "Try Again", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }   
    }//GEN-LAST:event_AdminrejectbtnActionPerformed


    private void authentpanelblockbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authentpanelblockbtnActionPerformed
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            String sql1="Update emp set status=? where eid=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql1);
            preparedStatement.setString(1,"Block");
             preparedStatement.setString(2,Adminpanelauthenroweid);
            int row = preparedStatement.executeUpdate();
            if(row>0){
                JOptionPane.showMessageDialog(Admin_Dashboard.this, "User Block Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                Adminpanelauthenroweid="";
                showAdminrequest();
            }
            stmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Error While Connecting To The Database", "Try Again", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }   
    }//GEN-LAST:event_authentpanelblockbtnActionPerformed

    
    private void LeakerpaneltableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LeakerpaneltableMouseClicked
        leakerpanelbtnpanel.setVisible(true);
        DefaultTableModel model1 = (DefaultTableModel)Leakerpaneltable.getModel();
        leakerpanelselectroweid=model1.getValueAt(Leakerpaneltable.getSelectedRow(),0).toString();
        
    }//GEN-LAST:event_LeakerpaneltableMouseClicked

    private void leakerbtnpanelblockbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leakerbtnpanelblockbtnActionPerformed
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            String sql1="Update emp set status=? where eid=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql1);
            preparedStatement.setString(1,"Block");
             preparedStatement.setString(2,leakerpanelselectroweid);
            int row = preparedStatement.executeUpdate();
            if(row>0){
                JOptionPane.showMessageDialog(Admin_Dashboard.this, "User Block Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                leakerpanelselectroweid="";
                showleakfiledata();
            }
            stmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Error While Connecting To The Database", "Try Again", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }   
        
    }//GEN-LAST:event_leakerbtnpanelblockbtnActionPerformed

    private void leakerpanelunblockbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leakerpanelunblockbtnActionPerformed
       final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            String sql1="Update emp set status=? where eid=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql1);
            preparedStatement.setString(1,"active");
             preparedStatement.setString(2,leakerpanelselectroweid);
            int row = preparedStatement.executeUpdate();
            if(row>0){
                JOptionPane.showMessageDialog(Admin_Dashboard.this, "User Unblock Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                leakerpanelselectroweid="";
                showleakfiledata();
            }
            
            stmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Error While Connecting To The Database", "Try Again", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }   
    }//GEN-LAST:event_leakerpanelunblockbtnActionPerformed

    public void show_new_user_request(){
        Newrequestappropanel.setVisible(false);
        New_Requestpaneltable.getTableHeader().setFont(new Font("Lato",Font.PLAIN,20));
        New_Requestpaneltable.getTableHeader().setBackground(new Color(153,0,51));
        New_Requestpaneltable.getTableHeader().setForeground(new Color(255,255,255));
        New_Requestpaneltable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        New_Requestpaneltable.getColumnModel().getColumn(0).setPreferredWidth(100);
        New_Requestpaneltable.getColumnModel().getColumn(1).setPreferredWidth(200);
        New_Requestpaneltable.getColumnModel().getColumn(2).setPreferredWidth(130);
        New_Requestpaneltable.getColumnModel().getColumn(3).setPreferredWidth(248);
        New_Requestpaneltable.getColumnModel().getColumn(4).setPreferredWidth(100);
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            String sql = "Select * from emp where status=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            preparedStatement.setString(1,"pending");
            ResultSet rs = preparedStatement.executeQuery();
            DefaultTableModel model = (DefaultTableModel)New_Requestpaneltable.getModel();
            while (model.getRowCount() > 0) {
                    model.removeRow(0);
            }
            
            while(rs.next()){ 
                String[] rowData = new String[5];
                rowData[0]=rs.getString("eid");
                rowData[1]=rs.getString("name");
                rowData[2]=rs.getString("mobile");
                rowData[4]=rs.getString("Status");
                rowData[3]=rs.getString("email");
                model.addRow(rowData);
           }
            
            stmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Error While Connecting To The Database", "Try Again", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }   
    }
    private void New_RequestpaneltableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_New_RequestpaneltableMouseClicked
      Newrequestappropanel.setVisible(true);
      DefaultTableModel model1 = (DefaultTableModel)New_Requestpaneltable.getModel();
      New_user_approv_eid=model1.getValueAt(New_Requestpaneltable.getSelectedRow(),0).toString();
    }//GEN-LAST:event_New_RequestpaneltableMouseClicked

    private void New_useractivatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_New_useractivatebtnActionPerformed
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            String sql1="Update emp set status=? where eid=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql1);
            preparedStatement.setString(1,"active");
             preparedStatement.setString(2,New_user_approv_eid);
            int row = preparedStatement.executeUpdate();
            if(row>0){
                JOptionPane.showMessageDialog(Admin_Dashboard.this, "User Activate Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                New_user_approv_eid="";
                show_new_user_request();
            }
            
            stmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Error While Connecting To The Database", "Try Again", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } 
    }//GEN-LAST:event_New_useractivatebtnActionPerformed

    private void newuserrejectbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newuserrejectbtnActionPerformed
        final String url = "jdbc:mysql://localhost:3307/dlp";
        final String user = "root";
        final String password = "";
        try {
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            String sql1="delete from emp where eid=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql1);
            preparedStatement.setString(1,New_user_approv_eid);
            
            int row = preparedStatement.executeUpdate();
            if(row>0){
                JOptionPane.showMessageDialog(Admin_Dashboard.this, "User Remove Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                New_user_approv_eid="";
                show_new_user_request();
            }
            
            stmt.close();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(Admin_Dashboard.this, "Error While Connecting To The Database", "Try Again", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }   
    }//GEN-LAST:event_newuserrejectbtnActionPerformed
    
    private void New_user_requestcalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_New_user_requestcalMouseClicked
         New_user_requestcal.setForeground(new java.awt.Color(255,255,255));
         leakerlabelpan.setForeground(new java.awt.Color(0,0,0));
         Adminauth.setForeground(new java.awt.Color(0,0,0));
         sendfile.setForeground(new java.awt.Color(0,0,0));
         requestkey.setForeground(new java.awt.Color(0,0,0));
         filesent.setForeground(new java.awt.Color(0,0,0));
         filereceived.setForeground(new java.awt.Color(0,0,0));       
         filesenddeletefilebtn.setVisible(false);
         sendfilepannel.setVisible(false);
         keyreqpannel.setVisible(false);
         filesentpannel.setVisible(false);
         filereceivedpannel.setVisible(false);
         Receivefileinfopanel.setVisible(false);
         profileeditpanel.setVisible(false);
         defoultpanel.setVisible(false);
         Adminauthenticate.setVisible(false);
         Leakcheck.setVisible(false);
         New_User_request.setVisible(true);
         show_new_user_request();
    }//GEN-LAST:event_New_user_requestcalMouseClicked

    private  void saveFile(InputStream inputStream, String filePath) throws IOException {
        try (OutputStream outputStream = new FileOutputStream(filePath)) {
            byte[] buffer = new byte[4096];
            int bytesRead;
            while ((bytesRead = inputStream.read(buffer)) != -1) {
                outputStream.write(buffer, 0, bytesRead);
            }
        }
    }
    /**
     * @param args the command line arguments
     */
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdminApprovbtn;
    private javax.swing.JPanel Adminapprovalpanel;
    private javax.swing.JLabel Adminauth;
    private javax.swing.JPanel Adminauthenticate;
    private javax.swing.JTable Adminauthtable;
    private javax.swing.JButton Adminrejectbtn;
    private javax.swing.JPanel Leakcheck;
    private javax.swing.JTable Leakerpaneltable;
    private javax.swing.JTable New_Requestpaneltable;
    private javax.swing.JPanel New_User_request;
    private javax.swing.JLabel New_user_requestcal;
    private javax.swing.JButton New_useractivatebtn;
    private javax.swing.JPanel Newrequestappropanel;
    private javax.swing.JLabel Profileidpaneliuserinfolabel;
    private javax.swing.JPanel Receivefileinfopanel;
    private javax.swing.JTable Receivefilepaneltable;
    private javax.swing.JButton Requestpanelbtn;
    private javax.swing.JTable Requestpaneltable;
    private javax.swing.JLabel SendfileNamelabel;
    private javax.swing.JLabel Sendfilesubjextlabel;
    private javax.swing.JButton authentpanelblockbtn;
    private javax.swing.JLabel choseeidlabel;
    private javax.swing.JPanel defoultpanel;
    private javax.swing.JLabel eidtext;
    private javax.swing.JLabel filereceived;
    private javax.swing.JPanel filereceivedpannel;
    private javax.swing.JButton filesenddeletefilebtn;
    private javax.swing.JTable filesendpaneltable;
    private javax.swing.JLabel filesent;
    private javax.swing.JPanel filesentpannel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JPanel keyreqpannel;
    private javax.swing.JButton leakerbtnpanelblockbtn;
    private javax.swing.JLabel leakerlabelpan;
    private javax.swing.JPanel leakerpanelbtnpanel;
    private javax.swing.JLabel leakerpanellabel;
    private javax.swing.JTable leakerpaneltryleaktable;
    private javax.swing.JButton leakerpanelunblockbtn;
    private javax.swing.JButton logout;
    private javax.swing.JButton newuserrejectbtn;
    private javax.swing.JLabel priflepanelnamelabel;
    private javax.swing.JLabel profileeditlabel;
    private javax.swing.JPanel profileeditpanel;
    private javax.swing.JPanel profilepaneleditpanel;
    private javax.swing.JLabel profilepanelemaillabel;
    private javax.swing.JLabel profilepanelemailtext;
    private javax.swing.JButton profilepanelmakechangebtn;
    private javax.swing.JLabel profilepanelmobilelabel;
    private javax.swing.JLabel profilepanelmobiletext;
    private javax.swing.JLabel profilepanelnametext;
    private javax.swing.JLabel profilepanelnewemaillabel;
    private javax.swing.JTextField profilepanelnewemailtext;
    private javax.swing.JLabel profilepanelnewmobilelabel;
    private javax.swing.JTextField profilepanelnewmobiletext;
    private javax.swing.JLabel profilepanelnewpasswordlabel;
    private javax.swing.JTextField profilepanelnewpasswordtext;
    private javax.swing.JButton profilepanelshoweditpanelbtn;
    private javax.swing.JButton receivefileinfopaneldownbtn;
    private javax.swing.JLabel receivefileinfopanelkeylabel;
    private javax.swing.JLabel receivefileinfopanelkeytext;
    private javax.swing.JLabel receivefileinfopanellabelforkeyenter;
    private javax.swing.JButton receivefileinfopanelrequestbtn;
    private javax.swing.JTextField receivefileinfopaneltextfield;
    private javax.swing.JLabel requestkey;
    private javax.swing.JPanel rightpanel;
    private javax.swing.JLabel sendfile;
    private javax.swing.JPanel sendfilebox;
    private javax.swing.JButton sendfilechoosebutton;
    private javax.swing.JComboBox<String> sendfiledropdown;
    private javax.swing.JTextField sendfilefiletext;
    private javax.swing.JLabel sendfilenametext;
    private javax.swing.JPanel sendfilepannel;
    private javax.swing.JButton sendfilesendbutton;
    private javax.swing.JTextField sendfilesubjecttext;
    private javax.swing.JLabel status;
    // End of variables declaration//GEN-END:variables
}